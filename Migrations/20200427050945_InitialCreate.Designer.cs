// <auto-generated />
using System;
using APTA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APTA.Migrations
{
    [DbContext(typeof(ConferenceContext))]
    [Migration("20200427050945_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APTA.Models.Conference", b =>
                {
                    b.Property<int>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganiserID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConferenceID");

                    b.HasIndex("OrganiserID");

                    b.ToTable("Conference");
                });

            modelBuilder.Entity("APTA.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("APTA.Models.Organiser", b =>
                {
                    b.Property<int>("OrganiserID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Sponsor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganiserID");

                    b.ToTable("Organiser");
                });

            modelBuilder.Entity("APTA.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("RegistrationID");

                    b.HasIndex("ConferenceID");

                    b.HasIndex("MemberID");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("APTA.Models.Speaker", b =>
                {
                    b.Property<int>("SpeakerID")
                        .HasColumnType("int");

                    b.Property<int>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<DateTime>("SpeechTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SpeakerID");

                    b.HasIndex("ConferenceID");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("APTA.Models.Conference", b =>
                {
                    b.HasOne("APTA.Models.Organiser", "Organiser")
                        .WithMany("Conferences")
                        .HasForeignKey("OrganiserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APTA.Models.Registration", b =>
                {
                    b.HasOne("APTA.Models.Conference", "Conference")
                        .WithMany("Registrations")
                        .HasForeignKey("ConferenceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APTA.Models.Member", "Member")
                        .WithMany("Registrations")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APTA.Models.Speaker", b =>
                {
                    b.HasOne("APTA.Models.Conference", "Conference")
                        .WithMany("Speakers")
                        .HasForeignKey("ConferenceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
